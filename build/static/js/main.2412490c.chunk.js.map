{"version":3,"sources":["configs/config.tsx","api/HandleResponse.tsx","common/Utils.tsx","api/HandleRequest.tsx","components/animes/New.tsx","reducers/Auth.tsx","components/layout/Nav.tsx","components/layout/Main.tsx","components/EditorCustom/globals.tsx","components/EditorCustom/Index.tsx","components/EditorCustom/EditorToolbar.tsx","components/EditorCustom/EditorCustom.tsx","components/Editor/Toolbar.tsx","components/Loading/Loading.tsx","components/Images/ImageList.tsx","components/Images/ImageCrop.tsx","components/Images/Upload.tsx","components/Size/SizeList.tsx","components/Editor/Index.tsx","Route.tsx","serviceWorker.ts","index.tsx","logo.svg","images/avatar.svg"],"names":["CONFIG","GOOGLE_CLIENT_ID","IMAGE_URL","API_POST","API_AUTH_CALLBACK","API_REFRESH_TOKEN","API_POST_TEST","API_NEWS","API_IMAGE","LIST","API_SIZE","SETTING","HandleResponse","res","a","isError","isValidate","message","result","statusCode","status","isOk","ok","json","catch","err","console","log","statusText","objectToQueryString","params","glue","delimiter","Object","keys","JSON","parse","stringify","map","key","join","isEmpty","value","setHeader","options","token","localStorage","getItem","Authorization","getToken","URL","requestInit","method","headers","fetch","getList","page","limit","offset","queryString","fetchData","body","loginCallback","driver","UploadFile","url","formData","Accept","New","useState","items","setItems","setOffset","isLoading","setLoading","useEffect","current","prevAnimes","fetchAnime","loadMore","className","item","i","style","position","href","slug","src","thumbnail","alt","title","views","published_at","description","onClick","logo","userState","isAuthenticated","user","AuthContext","React","createContext","state","dispatch","userReducer","action","type","setItem","payload","clear","Nav","useContext","Boolean","response","identity_token","accessToken","to","profile_url","clientId","render","renderProps","disabled","avatar","onSuccess","onFailure","prompt","Layout","children","useReducer","Provider","window","jQuery","jquery","$","Form","lang","height","dialogsInBody","toolbar","onChange","content","handleImage","modules","container","handlers","undo","this","quill","history","redo","images","remove","aleft","format","aright","acenter","ajustify","delay","maxStack","userOnly","QuillToolbar","id","defaultValue","paddingLeft","paddingRight","color","EditorCustom","EditorToolbar","theme","CustomUndo","viewBox","points","d","CustomRedo","CustomImage","width","x","y","cx","cy","r","undoChange","redoChange","Toolbar","Loading","totalItem","col","clsName","arrItem","push","renderItems","ImageList","prefixUrl","length","idx","media_url","created_at","event","handleSelect","icon","faPlusCircle","size","media_title","ImageCrop","innerHeight","imgRef","useRef","previewCanvasRef","isMultipleFile","aspect","unit","crop","setCrop","completedCrop","setCompletedCrop","isCrop","acceptedFiles","setAcceptedFiles","rejectFiles","setRejectFiles","saving","setSaving","selectedCrop","error","setError","validate","setValidate","previewImages","setPreviewImages","upImg","setUpImg","onLoad","useCallback","img","handleChangeCrop","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingEnabled","drawImage","currentFile","reader","FileReader","addEventListener","readAsDataURL","dataFile","FormData","data","file","media_size","medial_title","append","upload","undefined","maxHeight","onImageLoaded","onComplete","c","onDropAccepted","files","onDropRejected","accept","maxSize","multiple","getRootProps","getInputProps","minHeight","Math","round","noScrollX","name","errors","ref","Upload","SizeList","sizes","setSizes","fetchSizes","useSizes","sizeChecked","filter","selected","handleClick","Editor","valueEditor","setValueEditor","showPopup","setShowPopup","activeTab","setActiveTab","setImages","setIsLoading","totalPage","setTotalPage","setPage","meta","total_pages","getImages","useImages","setSize","inputElement","editor","getEditor","getSelection","handleSelectImg","insertEmbed","handleActiveTab","delta","source","getHTML","placeholder","top","faThList","faCloudUploadAlt","faCropAlt","Pagination","count","boundaryCount","_e","showFirstButton","showLastButton","right","NoMatch","location","useLocation","pathname","Home","Character","AppRoute","exact","path","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2412490c.chunk.js","sourcesContent":["const CONFIG = {\n    GOOGLE_CLIENT_ID: '650068002981-iivventkbtgnqjfl1cso0vs2upvkkt9t.apps.googleusercontent.com',\n    IMAGE_URL: 'https://storage.googleapis.com/duy-bucket/',\n    API_POST: 'https://tinanime.com/api/news/',\n    API_AUTH_CALLBACK: '/api/authentication',\n    API_REFRESH_TOKEN: 'api/refresh-token',\n    API_POST_TEST: '/api/v1/posts',\n\n    API_NEWS: 'https://tinanime.com/api/news/',\n    API_IMAGE: {\n        LIST: '/api/v1/images'\n    },\n    API_SIZE: {\n        LIST: '/api/v1/sizes'\n    }\n}\n\nexport default CONFIG;\n\nexport const SETTING = {\n    ACCEPTED_FILE_TYPES: 'image/png, image/jpg, image/jpeg', //, image/jpg, image/jpeg\n    MAX_SIZE: 3000000, // 3MB = 3000000,\n    MAX_TOTAL_FILE: 10\n}","interface IHandleResponse {\n    isError: boolean;\n    isValidate: boolean;\n    message: any;\n    result: any;\n    statusCode: number\n}\n\n/**\n * \n * @param res:Response\n * @return IHandleResponse\n */\nexport default async function HandleResponse(res: Response) {\n    let isError = false\n    let isValidate = false\n    let message = null\n    let result = null\n    let statusCode = res.status\n    let isOk = res.ok\n\n    if (isOk && statusCode >= 200 && statusCode < 300) {\n        result = await res.json().catch(err => {\n            console.log(err);\n            isError = true\n            message = \"error\"\n        });\n    }\n\n    if (!isOk && statusCode === 422) {\n        isValidate = true;\n        message = await res.json();\n    }\n\n    if (!isOk && statusCode === 404) {\n        isError = true;\n        message = res.statusText;\n    }\n\n    if (!isOk && statusCode === 401) {\n        isError = true;\n        message = 'Token Expired, Vui lòng đăng nhập lại';\n    }\n\n    if (!isOk && statusCode === 500) {\n        isError = true;\n        message = res.statusText;\n    }\n\n    return { isError, isValidate, message, result, statusCode } as IHandleResponse;\n};\n","/**\n * Convert object to query string: page=1&limit=20\n * \n * @param params \n * @param glue \n * @param delimiter \n * \n * @return string\n */\nexport const objectToQueryString = (params: object | any, glue: string = ':', delimiter: string = ';') => {\n  return Object.keys(JSON.parse(JSON.stringify(params))).map(key => key + `${glue}` + params[key]).join(delimiter);\n};\n\n/**\n * Check key in object not empty value\n * \n * @param params \n * @param glue \n * @param delimiter \n * \n * @return boolean\n */\nexport const isEmptyKeyInObject = (params: object) => {\n  if (Object.keys(JSON.parse(JSON.stringify(params))).length) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * \n * @param value \n * \n * @return boolean\n */\nexport const showError = (clientError: any, errorInfo: any, key: string) => {\n  if (clientError[key] && !isEmpty(clientError[key])) {\n    return clientError[key];\n  }\n\n  if (errorInfo.errors[key] && Array.isArray(errorInfo.errors[key])) {\n    return errorInfo.errors[key][0];\n  }\n\n  return '';\n}\n\n/**\n * \n * @param value \n * \n * @return boolean\n */\nexport const isEmpty = (value: any) => {\n  return (value === 'undefined' || value === null || value === '');\n}\n\nexport function sleep(ms: number) {\n  return new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n}\n\n/**\n * \n * @param value \n */\nexport function isEmptyObject(value: any) {\n  return Object.keys(value).length === 0;\n}","import HandleResponse from './HandleResponse';\nimport { objectToQueryString, isEmpty } from '../common/Utils';\nimport CONFIG from '../configs/config';\n\nexport function setHeader() {\n  let options = {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  } as any;\n\n  const token = localStorage.getItem('token');\n\n  if (!isEmpty(token)) {\n    options.Authorization = `Bearer ${JSON.parse(token!)}`\n  }\n\n  return options;\n}\n\nexport const getToken = async (URL: string) => {\n  const requestInit = {\n    method: \"POST\",\n    headers: setHeader()\n  } as RequestInit;\n\n  const result = await fetch(URL, requestInit);\n\n  return HandleResponse(result);\n}\n\n/**\n * Make request with method get\n * @method GET\n * @param url \n * @param page \n * @param limit \n * @param sortbyc \n * @param sortby \n * @param search \n * @param columns \n * \n * @return HandleResponse\n */\nexport const getList = async (URL: string, page = 0, limit: number = 10, offset: number = 10) => {\n  const requestInit = {\n    method: \"GET\",\n    headers: setHeader()\n  } as RequestInit;\n\n  const queryString = page > 0 ? objectToQueryString({ page }, '=', '&') : objectToQueryString({ limit, offset }, '=', '&');\n  const result = await fetch(`${URL}?${queryString}`, requestInit);\n\n  return HandleResponse(result);\n};\n\n\nexport async function fetchData(URL: string, method: string = 'GET', body?: object) {\n  let requestInit = {\n    method: method,\n    headers: setHeader()\n  } as RequestInit;\n\n  if (method === 'POST' || method === 'PUT') {\n    requestInit.body = JSON.stringify(body)\n  }\n\n  const result = await fetch(URL, requestInit);\n\n  return HandleResponse(result);\n}\n\nexport async function loginCallback(driver: string, body?: object) {\n  return await fetchData(`${CONFIG.API_AUTH_CALLBACK}/${driver}`, 'POST', body);\n}\n\n/**\n * Fine one by id and select dynamic columns\n * @method GET\n * @param url \n * @param id \n * @param columns \n * \n * @return HandleResponse\n */\nexport const findOne = async (url: string, id: string, columns?: string[]) => {\n  var fullUrl: string = \"\";\n  if (columns === undefined) {\n    fullUrl = `${url}?id=${id}`;\n  } else {\n    fullUrl = `${url}?id=${id}&columns=${columns}`;\n  }\n\n  const result = await fetch(fullUrl, {\n    method: \"GET\",\n    headers: setHeader(),\n  });\n\n  return HandleResponse(result);\n};\n\n\n/**\n * Function store data\n * @method POST\n * @param url \n * @param model \n * @return HandleResponse\n */\nexport const Store = async (url: string, model: object) => {\n  const result = await fetch(`${url}`, {\n    method: \"POST\",\n    headers: setHeader(),\n    body: JSON.stringify(model)\n  });\n\n  return HandleResponse(result);\n};\n\n/**\n * Function edit\n * @param url \n * @param id \n */\n\n/**\n* Function edit\n* @method GET\n* @param url \n* \n* @return HandleResponse\n*/\nexport const Edit = async (url: string, id: number | string) => {\n  const result = await fetch(`${url}/${id}/edit`, {\n    method: \"GET\",\n    headers: setHeader(),\n  });\n\n  return HandleResponse(result);\n};\n\n/**\n * Function update\n * @method GET\n * @param url\n * @param model\n * @param id\n * \n * @return HandleResponse\n */\nexport const Update = async (url: string, model: object, id: string | number) => {\n  const result = await fetch(`${url}/${id}`, {\n    method: \"PUT\",\n    headers: setHeader(),\n    body: JSON.stringify(model)\n  });\n\n  return HandleResponse(result);\n}\n\n/**\n * Function delete\n * @method GET\n * @param url \n * \n * @return HandleResponse\n */\nexport const Destroy = async (url: string, id: string) => {\n  const result = await fetch(`${url}/${id}`, {\n    method: \"DELETE\",\n    headers: setHeader()\n  });\n\n  return HandleResponse(result);\n}\n\n\n/**\n * Function store data\n * @method POST\n * @param url \n * @param model \n * @return HandleResponse\n */\nexport const UploadFile = async (url: string, formData: any) => {\n  let options = {\n    Accept: \"application/x-www-form-urlencoded, multipart/form-data\"\n  } as any;\n\n  const token = localStorage.getItem('token');\n  if (isEmpty(token)) {\n    options.Authorization = `Bearer ${JSON.parse(localStorage.getItem('token')!)}`\n  }\n\n  const result = await fetch(`${url}`, {\n    method: \"POST\",\n    headers: options,\n    body: formData\n  });\n\n  return HandleResponse(result);\n};","import React from 'react';\nimport logo from \"../../logo.svg\";\nimport '../../styles/Items.scss';\nimport { useState, useEffect } from \"react\";\nimport CONFIG from '../../configs/config';\nimport { getList } from '../../api/HandleRequest';\n\ninterface Provider {\n\tid: number;\n\tthumbnail: string;\n\ttitle: string;\n\tviews: number;\n\tpublished_at: string;\n\tdescription: string;\n\tslug: string\n}\n\nexport default function New() {\n\tconst [items, setItems] = useState<Provider[]>([]);\n\tconst [offset, setOffset] = useState(0);\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet current = true;\n\n\t\tasync function fetchAnime() {\n\t\t\tconst res = await getList(CONFIG.API_NEWS, 0, 10, offset);\n\t\t\tif (current) {\n\t\t\t\tsetItems(prevAnimes => [...prevAnimes, ...res.result]);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\n\t\tfetchAnime();\n\t\treturn () => { current = false }\n\t}, [offset]); // ✅\n\n\tconst loadMore = async () => {\n\t\tsetLoading(true);\n\t\tsetOffset(offset + 8);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{\n\t\t\t\t\t\titems.map((item: Provider, i: number) =>\n\t\t\t\t\t\t\t<div className=\"col-3\" key={i}>\n\t\t\t\t\t\t\t\t<div className=\"item\" style={{ position: 'relative' }}>\n\t\t\t\t\t\t\t\t\t<div className=\"item-thumbnail\">\n\t\t\t\t\t\t\t\t\t\t<a href={item.slug}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} />\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"item-title\">\n\t\t\t\t\t\t\t\t\t\t<a href={item.slug}>{item.title}</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"item-meta\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-view\">{item.views} lượt xem</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-publish-date\">{item.published_at}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"item-desc\">\n\t\t\t\t\t\t\t\t\t\t<p>{item.description}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-50\">\n\t\t\t\t\t<button className=\"btn-load-more\" onClick={loadMore}>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<span className=\"bg\" />\n\t\t\t\t\t\t\t<span className=\"base\" />\n\t\t\t\t\t\t\t<span className=\"text\">\t{isLoading ? <img className=\"spinner\" src={logo} alt=\"loading icon\" /> : \"Xem thêm\"}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from \"react\";\nimport { Login } from \"../components/interfaces/login\";\n\nexport const userState = {\n  isAuthenticated: false,\n  token: null,\n  user: {}\n};\n\nexport const AuthContext = React.createContext<{ state: Login; dispatch: React.Dispatch<any>; }>({ state: userState, dispatch: () => null });\n\nexport function userReducer(state: Login, action: any) {\n  switch (action.type) {\n    case \"LOGIN\":\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n      localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      return {\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    case \"LOGOUT\":\n      localStorage.clear();\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: {}\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../styles/Menu.scss';\nimport avatar from \"../../images/avatar.svg\";\nimport { AuthContext } from '../../reducers/Auth';\nimport { GoogleLogin } from 'react-google-login';\nimport { loginCallback } from '../../api/HandleRequest';\nimport { User } from '../interfaces/login';\nimport CONFIG from '../../configs/config';\n\n\nexport default function Nav() {\n  const { state, dispatch } = useContext(AuthContext);\n  const isAuthenticated = Boolean(localStorage.getItem(\"isAuthenticated\"));\n  const user = JSON.parse(localStorage.getItem('user')!) as User;\n\n  async function responseGoogleSuccess(response: any) {\n    const res = await loginCallback('google', { identity_token: response.accessToken });\n    dispatch({ type: \"LOGIN\", payload: res.result });\n  }\n\n  const responseGoogleFailure = (response: any) => {\n    console.log(response);\n  }\n\n  // console.log('%c RENDER NAVBAR', 'color: orange; font-size: 20px')\n  return (\n    <nav className=\"navbar nav-tick\">\n      <div className=\"container\">\n        <ul className=\"nav-menu\">\n          <li><Link to='/' className=\"item\">Home</Link></li>\n          <li><Link to='/form' className=\"item\">Form</Link></li>\n          <li><Link to='/form-two' className=\"item\">Editor customize</Link></li>\n          <li><Link to='/form-three' className=\"item\">Editor normal</Link></li>\n          <li><Link to='/crop-image' className=\"item\">Crop image</Link></li>\n          <li><Link to='/tin-tuc-anime' className=\"item\">News</Link></li>\n          <li><Link to='/nhan-vat' className=\"item\">Characters</Link></li>\n\n          {\n            state.isAuthenticated || isAuthenticated ?\n              <li className=\"login\"><button onClick={() => dispatch({ type: \"LOGOUT\" })}><img src={user.profile_url} alt=\"\" /></button></li> :\n              <li className=\"login\">\n                <GoogleLogin\n                  clientId={CONFIG.GOOGLE_CLIENT_ID}\n                  render={renderProps => (\n                    <button onClick={renderProps.onClick} disabled={renderProps.disabled}><img src={avatar} alt=\"\" /></button>\n                  )}\n                  onSuccess={responseGoogleSuccess}\n                  onFailure={responseGoogleFailure}\n                  className=\"loginBtn loginBtn--google\"\n                  prompt=\"select_account\"\n                />\n              </li>\n          }\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import React, { useReducer } from \"react\"\nimport Nav from '../layout/Nav';\nimport { userState, userReducer, AuthContext } from '../../reducers/Auth';\n\nexport default function Layout({ children }: any) {\n\tconst [state, dispatch] = useReducer(userReducer, userState);\n\n\treturn (\n\t\t<AuthContext.Provider value={{ state, dispatch }}>\n\t\t\t<Nav />\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t)\n}\n","import jquery from 'jquery'; \n(window as any).jQuery = jquery; (window as any).jquery = jquery; (window as any).$ = jquery;","import React from 'react';\nimport './globals';\nimport ReactSummernote from 'react-summernote';\nimport 'react-summernote/dist/react-summernote.css';\nimport 'react-summernote/lang/summernote-vi-VN';\nimport 'bootstrap/js/dist/modal';\nimport 'bootstrap/js/dist/dropdown';\nimport 'bootstrap/js/dist/tooltip';\n\nexport default function Form() {\n\n  function onChange(content: any) {\n    console.log('onChange', content);\n  }\n\n  return (\n    <div className=\"container\">\n      <ReactSummernote\n        value=\"Default value\"\n        options={{\n          lang: 'ru-RU',\n          height: 350,\n          dialogsInBody: true,\n          toolbar: [\n            ['style', ['style']],\n            ['font', ['bold', 'underline', 'clear']],\n            ['fontname', ['fontname']],\n            ['para', ['ul', 'ol', 'paragraph']],\n            ['table', ['table']],\n            ['insert', ['link', 'picture', 'video']],\n            ['view', ['fullscreen', 'codeview']]\n          ]\n        }}\n        onChange={onChange}\n      />\n    </div>\n  );\n}","import React from \"react\";\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange(this: any) {\n  this.quill.history.undo();\n}\n\nfunction redoChange(this: any) {\n  this.quill.history.redo();\n}\n\nfunction handleImage() {\n  console.log(111);\n}\n\nfunction alignLeft(this: any) {\n  this.quill.format('align', '');\n}\n\nfunction alignRight(this: any) {\n  this.quill.format('align', 'right');\n}\n\nfunction alignCenter(this: any) {\n  this.quill.format('align', 'center');\n}\n\nfunction alignJustify(this: any) {\n  this.quill.format('align', 'justify');\n}\n\n\n// Modules object for setting up the Quill editor\nexport const modules = {\n  toolbar: {\n    container: \"#toolbar\",\n    handlers: {\n      undo: undoChange,\n      redo: redoChange,\n      images: handleImage,\n      remove: handleImage,\n      aleft: alignLeft,\n      aright: alignRight,\n      acenter: alignCenter,\n      ajustify: alignJustify\n    }\n  },\n  history: {\n    delay: 500,\n    maxStack: 100,\n    userOnly: true\n  }\n};\n\n\n// Quill Toolbar component\nexport const QuillToolbar = () => (\n  <div id=\"toolbar\" className=\"custom-toolbar\">\n    <button className=\"ql-header header-one\" value=\"1\" />\n    <button className=\"ql-header header-two\" value=\"2\" />\n    <button className=\"ql-header header-three\" value=\"3\" />\n    <select title=\"Size\" className=\"ql-size\">\n      <option value=\"10px\">10px</option>\n      <option value=\"12px\">12px</option>\n      <option value=\"14px\" defaultValue=\"14px\">14px</option>\n      <option value=\"16px\">16px</option>\n    </select>\n    <button className=\"ql-images\" />\n    <button className=\"ql-video\" />\n\n    <button className=\"ql-link\" />\n    <button className=\"ql-remove\" />\n    <button className=\"ql-undo\" />\n    <button className=\"ql-redo\" />\n\n    <button className=\"ql-bold\" />\n    <button className=\"ql-italic\" />\n    <small style={{paddingLeft: '1em', paddingRight: '15px', color: '#999'}}>\n         Octicon\n      </small>\n    <button className=\"ql-underline\" />\n    <small style={{paddingLeft: '1em', paddingRight: '0', color: '#999'}}>\n         FontAwesome\n      </small>\n    <span className=\"ql-formats\">\n      <select className=\"ql-color\" />\n      <select className=\"ql-background\" />\n    </span>\n    <span className=\"ql-formats\">\n      <button className=\"ql-list ql-ordered\" value=\"ordered\" />\n      <button className=\"ql-list ql-bullet\" value=\"bullet\" />\n      <button className=\"ql-blockquote\" />\n      {/* <button className=\"ql-indent\" value=\"-1\" />\n      <button className=\"ql-indent\" value=\"+1\" /> */}\n      {/* <select className=\"ql-align\" /> */}\n    </span>\n    <button className=\"ql-aleft\" value=\"left\"/>\n    <button className=\"ql-acenter\" value=\"center\" />\n    <button className=\"ql-aright\" value=\"right\"/>\n    <button className=\"ql-ajustify\" value=\"justify\"/>\n    <span className=\"ql-formats\">\n      <button className=\"ql-script ql-super\" value=\"super\" />\n      <button className=\"ql-script ql-sub\" value=\"sub\" />\n      <button className=\"ql-clean\" />\n    </span>\n  </div>\n);\n\nexport default QuillToolbar;","import React, { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport '../../styles/TextEditor.scss';\nimport EditorToolbar, { modules } from \"./EditorToolbar\";\n\n\nexport default function EditorCustom() {\n  const [value] = useState('');\n\n  const handleChange = (value: any) => {\n    // setValue('test');\n  }\n\n  return (\n    <div className=\"container\">\n      <EditorToolbar />\n      <ReactQuill\n        theme=\"snow\"\n        value={value}\n        onChange={handleChange}\n        modules={modules}\n      />\n    </div>\n  );\n}","import React from \"react\";\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\nconst CustomImage = () => (\n    <svg viewBox=\"0 0 18 18\"> <rect className=\"ql-stroke\" height=\"10\" width=\"12\" x=\"3\" y=\"4\"></rect>\n        <circle className=\"ql-fill\" cx=\"6\" cy=\"7\" r=\"1\"></circle>\n        <polyline className=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline>\n    </svg>\n)\n\n\nexport function undoChange(this: any) {\n    this.quill.history.undo()\n}\n\nexport function redoChange(this: any) {\n    this.quill.history.redo()\n}\n\n\n// Quill Toolbar component\nexport const Toolbar = () => (\n    <div id=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-font\" defaultValue=\"arial\">\n                <option value=\"arial\">Arial</option>\n                <option value=\"comic-sans\">Comic Sans</option>\n                <option value=\"courier-new\">Courier New</option>\n                <option value=\"georgia\">Georgia</option>\n                <option value=\"helvetica\">Helvetica</option>\n                <option value=\"lucida\">Lucida</option>\n            </select>\n            <select className=\"ql-size\" defaultValue=\"12px\">\n                <option value=\"12px\">12 px</option>\n                <option value=\"13px\">13 px</option>\n                <option value=\"14px\">14 px</option>\n                <option value=\"15px\">15 px</option>\n                <option value=\"16px\">16 px</option>\n                <option value=\"17px\">17 px</option>\n                <option value=\"18px\">18 px</option>\n                <option value=\"19px\">19 px</option>\n                <option value=\"20px\">20 px</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"1\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            {/* <select className=\"ql-align\" /> */}\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-images\">\n                <CustomImage />\n            </button>\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n)\n\nexport default Toolbar;","import React from 'react';\nimport '../Loading/Loading.scss';\n\nexport default function Loading({ totalItem, col, clsName }: any) {\n    const item = (key: number, col: number) => (\n        <div className={`col-${col} item `} key={key}>\n            <div className=\"timeline-wrapper\">\n                <div className=\"timeline-item\">\n                    <div className=\"animated-background\">\n                        <div className=\"background-masker header-image\"></div>\n                        <div className=\"background-masker content-top\"></div>\n                        <div className=\"background-masker content-second-line\"></div>\n                        <div className=\"background-masker content-second-end\"></div>\n                        <div className=\"background-masker content-third-line\"></div>\n                        <div className=\"background-masker desc-first-line\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n    function renderItems() {\n        if (typeof totalItem === 'undefined') return\n\n        let i = 0, arrItem = [];\n        for (; i < totalItem; i++) {\n            arrItem.push(item(i, col));\n        }\n\n        return arrItem\n    }\n\n    return (\n        <div className={clsName ?? 'row'}>\n            {renderItems()}\n        </div>\n    );\n}\n","import React from 'react'\nimport { UseImageProp } from './ImageInterface'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ImageList({ items, clsName, prefixUrl, onChange }: UseImageProp) {\n  function handleSelect(event: React.ChangeEvent<unknown>, item: any) {\n    if (onChange) {\n      onChange(item, event)\n    }\n  }\n\n  if (!items.length) return <div className={clsName}></div>\n\n  return (\n    <div className={clsName ?? 'row'}>\n      {\n        items.map((item: any, idx: number) =>\n          <div className=\"col-md-4\" key={idx}>\n            <div className=\"single-item inner-box\">\n              <figure className=\"image-box\">\n                <picture>\n                  <img className=\"img-fluid\" src={`${prefixUrl}${item.media_url}`} alt=\"\" />\n                </picture>\n                <div className=\"time\">\n                  <span>Ngày tạo: </span>\n                  <span>{item.created_at}</span>\n                </div>\n                <div className=\"overlay-box\">\n                  <div className=\"overlay-inner\">\n                    <div className=\"content\">\n                      <span className=\"handle-action\" onClick={(event) => handleSelect(event, item)}>\n                        <FontAwesomeIcon icon={faPlusCircle} size=\"lg\" className=\"\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </figure>\n              <div className=\"lower-content\">\n                <div className=\"text\">{item.media_title}</div>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  )\n}\n","import React, { useState, useRef, useEffect, useCallback } from \"react\"\nimport Dropzone, { FileRejection } from 'react-dropzone'\nimport ReactCrop from \"react-image-crop\"\nimport RSC from \"react-scrollbars-custom\"\nimport \"react-image-crop/dist/ReactCrop.css\"\nimport '../Images/Upload.scss'\nimport { SETTING } from \"../../configs/config\"\nimport { UploadFile } from '../../api/HandleRequest';\nimport CONFIG from \"../../configs/config\"\nimport ImageList from \"./ImageList\"\nimport { Size } from \"../Size/SizeInterface\"\n\n// Setting a high pixel ratio avoids blurriness in the canvas crop preview.\nconst pixelRatio = 4;\n\n// We resize the canvas down when saving on retina devices otherwise the image\n// will be double or triple the preview size.\n// function getResizedCanvas(canvas: HTMLCanvasElement, newWidth: number, newHeight: number) {\n//   const tmpCanvas = document.createElement(\"canvas\");\n//   tmpCanvas.width = newWidth;\n//   tmpCanvas.height = newHeight;\n\n//   const ctx: any = tmpCanvas.getContext(\"2d\");\n//   ctx.drawImage(\n//     canvas,\n//     0,\n//     0,\n//     canvas.width,\n//     canvas.height,\n//     0,\n//     0,\n//     newWidth,\n//     newHeight\n//   );\n\n//   return tmpCanvas;\n// }\n\n// function generateDownload(previewCanvas: any, crop: any) {\n//   if (!crop || !previewCanvas) {\n//     return;\n//   }\n\n//   const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\n\n//   canvas.toBlob(\n//     blob => {\n//       const previewUrl = window.URL.createObjectURL(blob);\n\n//       const anchor = document.createElement(\"a\");\n//       anchor.download = \"cropPreview.png\";\n//       anchor.href = URL.createObjectURL(blob);\n//       anchor.click();\n\n//       window.URL.revokeObjectURL(previewUrl);\n//     },\n//     \"image/png\",\n//     1\n//   );\n// }\n\nexport default function ImageCrop({ size }: { size?: Size }) {\n\n  const [innerHeight] = useState(window.innerHeight - 230)\n  // const [upImg, setUpImg] = useState('');\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [isMultipleFile, /*setIsMultipleFile*/] = useState(false);\n  const [crop, setCrop] = useState({ aspect: 16 / 9, x: 0, y: 0, unit: \"%\", width: 50, height: 50 } as ReactCrop.Crop);\n  const [completedCrop, setCompletedCrop] = useState({} as ReactCrop.Crop);\n  const [isCrop] = useState(size);\n  const [acceptedFiles, setAcceptedFiles] = useState<any>([])\n  const [rejectFiles, setRejectFiles] = useState<any>([])\n  const [saving, setSaving] = useState(false);\n  const [selectedCrop] = useState(0);\n  const [error, setError] = useState('');\n  const [validate, setValidate] = useState([])\n  const [previewImages, setPreviewImages] = useState<any>([]);\n  const [upImg, setUpImg] = useState('');\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n    const image: any = imgRef.current;\n    const canvas: any = previewCanvasRef.current;\n    const crop: ReactCrop.Crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx: any = canvas.getContext(\"2d\");\n\n    (canvas.width as number) = (crop.width as number) * pixelRatio;\n    (canvas.height as number) = (crop.height as number) * pixelRatio;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingEnabled = false;\n\n    ctx.drawImage(\n      image,\n      (crop.x as number) * scaleX,\n      (crop.y as number) * scaleY,\n      (crop.width as number) * scaleX,\n      (crop.height as number) * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n  }, [completedCrop]);\n\n  useEffect(() => {\n    // only validate dimension of image when upload single file\n    if (acceptedFiles.length > 0 && isCrop) {\n      const currentFile = acceptedFiles[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => setUpImg(reader.result as string));\n      reader.readAsDataURL(currentFile);\n      return;\n    }\n\n    if (acceptedFiles.length > 2) {\n      return console.log(\"Upload tối đa 10 file 1 lần\")\n    }\n\n    let dataFile = new FormData();\n    acceptedFiles.map((file: any) => {\n      file.media_size = 1;\n      file.medial_title = \"aaaaa\";\n      return dataFile.append('files[]', file);\n    });\n\n    dataFile.append('media_size', selectedCrop as any);\n\n    async function upload() {\n      setSaving(true)\n      const res = await UploadFile(CONFIG.API_IMAGE.LIST, dataFile);\n      setSaving(false);\n      if (res.isError) {\n        return setError(res.message);\n      }\n\n      if (res.isValidate) {\n        return setValidate(res.message);\n      }\n\n      setPreviewImages(res.result.data);\n    }\n\n    if (acceptedFiles.length > 0) {\n      upload();\n    }\n  }, [acceptedFiles, selectedCrop, isCrop])\n\n  useEffect(() => {\n    const crop = {\n      aspect: 16 / 9,\n      x: 0,\n      y: 0,\n      unit: \"px\",\n      width: size?.width,\n      height: size?.height,\n    } as any;\n\n    if (size !== undefined && Object.keys(size).length > 0) {\n      setCrop(crop);\n    }\n\n  }, [size])\n\n  function handleChangeCrop(crop: ReactCrop.Crop) {\n    setCrop(crop);\n  }\n\n  function renderDrop() {\n    if (saving) {\n      return <div style={{ width: \"100%\" }}>\n        <div className=\"loading\">\n          <div className=\"lds-css\">\n            <div style={{ width: '100%', height: '100%' }} className=\"lds-wedges\">\n              <div>\n                <div><div></div></div>\n                <div><div></div></div>\n                <div><div></div></div>\n                <div><div></div></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    }\n\n    if (upImg.length)\n      return <ReactCrop\n        className={'custom-css-react-crop'}\n        style={{ width: '50%', maxHeight: '400px' }}\n        src={upImg as any}\n        crop={crop as any}\n        onImageLoaded={onLoad}\n        onChange={handleChangeCrop}\n        onComplete={(c: any) => setCompletedCrop(c)}\n      />\n\n    return <Dropzone\n      onDropAccepted={files => setAcceptedFiles(files)}\n      onDropRejected={files => setRejectFiles(files)}\n      accept={SETTING.ACCEPTED_FILE_TYPES}\n      maxSize={SETTING.MAX_SIZE}\n      multiple={isMultipleFile}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <section className=\"d-flex flex-wrap box-dropzone\">\n          <div {...getRootProps()} className=\"d-flex flex-wrap dropzone\" style={{ minHeight: '180px' }}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  }\n\n  /**\n   * Store image\n  * @param files: any\n  * @param rejectedFiles: any\n  * @event Cropped Image: https://www.youtube.com/watch?v=b2ExhH3g64w&list=PLEsfXFp6DpzQbwYDx1zgcKJ4tzyWFaESK&index=30\n  * @returns\n   */\n  return (\n    <>\n      {renderDrop()}\n      {\n        crop &&\n        <div className=\"preview-image-option\">\n          <div className=\"option-block\">\n            <label>X:</label>\n            <span>{crop.x}</span>\n          </div>\n          <div className=\"option-block\">\n            <label>Y:</label>\n            <span>{crop.y}</span>\n          </div>\n          <div className=\"option-block\">\n            <label>W:</label>\n            <span>{Math.round(crop.width as number)}</span>\n\n          </div>\n          <div className=\"option-block\">\n            <label>H:</label>\n            <span>{Math.round(crop.height as number)}</span>\n          </div>\n          <div className=\"option-block\">\n            <label>U:</label>\n            <span>{crop.unit}</span>\n          </div>\n        </div>\n      }\n      <div className=\"preview-image\">\n        {validate.length > 0 && <div className=\"preview-header\">{validate}</div>}\n        {error && <div className=\"preview-header\">{error}</div>}\n        {\n          rejectFiles.length > 0 &&\n          <>\n            <div className=\"preview-header\">Files upload error</div>\n            <div className=\"errors\">\n              <RSC noScrollX={true} style={{ height: innerHeight - 350 }}>\n                {\n                  rejectFiles.map((item: FileRejection, idx: number) =>\n                    <div className=\"d-flex flex-wrap error-line\" key={idx}>\n                      <div className=\"col-7\">\n                        <span className=\"error\">{item.file.name}</span>\n                      </div>\n                      <div className=\"col-5\">\n                        {item.errors.map((error) => <span className=\"error\">{error.message}</span>)}\n                      </div>\n                    </div>\n                  )\n                }\n              </RSC>\n            </div>\n          </>\n        }\n        {\n          previewImages.length > 0 &&\n          <div className=\"box\">\n            <RSC noScrollX={true} style={{ height: innerHeight - 300 }}>\n              <ImageList items={previewImages} prefixUrl={CONFIG.IMAGE_URL} clsName=\"d-flex flex-wrap wrap-list\" />\n            </RSC>\n          </div>\n        }\n        {\n          previewCanvasRef &&\n          <div className=\"preview-header\">\n            <div className=\"preview-canvas\">\n              <RSC noScrollX={true} style={{ height: innerHeight - 450 }} className=\"scroll-canvas\">\n                <canvas\n                  ref={previewCanvasRef}\n                  style={{\n                    width: completedCrop?.width ?? 0,\n                    height: completedCrop?.height ?? 0\n                  }}\n                />\n              </RSC>\n            </div>\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect, useContext } from \"react\"\nimport Dropzone, { FileRejection } from 'react-dropzone'\nimport RSC from \"react-scrollbars-custom\"\nimport \"react-image-crop/dist/ReactCrop.css\"\nimport '../Images/Upload.scss'\nimport { SETTING } from \"../../configs/config\"\nimport { UploadFile } from '../../api/HandleRequest';\nimport CONFIG from \"../../configs/config\"\nimport ImageList from \"./ImageList\"\nimport { AuthContext } from \"../../reducers/Auth\"\n\n// Setting a high pixel ratio avoids blurriness in the canvas crop preview.\nexport default function Upload() {\n  const { dispatch } = useContext(AuthContext);\n  const [innerHeight] = useState(window.innerHeight - 230)\n  const [isMultipleFile, /*setIsMultipleFile*/] = useState(false);\n  const [acceptedFiles, setAcceptedFiles] = useState<any>([])\n  const [rejectFiles, setRejectFiles] = useState<any>([])\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [validate, setValidate] = useState([])\n  const [previewImages, setPreviewImages] = useState<any>([]);\n\n  useEffect(() => {\n    if (acceptedFiles.length > 2) {\n      return console.log(\"Upload tối đa 10 file 1 lần\")\n    }\n\n    let dataFile = new FormData();\n    acceptedFiles.map((file: any) => {\n      return dataFile.append('files[]', file);\n    });\n\n    async function upload() {\n      setSaving(true)\n      const res = await UploadFile(CONFIG.API_IMAGE.LIST, dataFile);\n      setSaving(false);\n      if (res.isError) {\n        if (res.statusCode === 401) {\n          dispatch({ type: \"LOGOUT\" })\n        }\n        return setError(res.message);\n      }\n\n      if (res.isValidate) {\n        return setValidate(res.message);\n      }\n\n      setPreviewImages(res.result.data);\n    }\n\n    if (acceptedFiles.length > 0) {\n      upload();\n    }\n  }, [acceptedFiles])\n\n\n  function renderDrop() {\n    if (saving) {\n      return <div style={{ width: \"100%\" }}>\n        <div className=\"loading\">\n          <div className=\"lds-css\">\n            <div style={{ width: '100%', height: '100%' }} className=\"lds-wedges\">\n              <div>\n                <div><div></div></div>\n                <div><div></div></div>\n                <div><div></div></div>\n                <div><div></div></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    }\n\n    return <Dropzone\n      onDropAccepted={files => setAcceptedFiles(files)}\n      onDropRejected={files => setRejectFiles(files)}\n      accept={SETTING.ACCEPTED_FILE_TYPES}\n      maxSize={SETTING.MAX_SIZE}\n      multiple={isMultipleFile}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <section className=\"d-flex flex-wrap box-dropzone\">\n          <div {...getRootProps()} className=\"d-flex flex-wrap dropzone\" style={{ minHeight: '180px' }}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  }\n\n  /**\n   * Store image\n  * @param files: any\n  * @param rejectedFiles: any\n  * @event Cropped Image: https://www.youtube.com/watch?v=b2ExhH3g64w&list=PLEsfXFp6DpzQbwYDx1zgcKJ4tzyWFaESK&index=30\n  * @returns\n   */\n  return (\n    <>\n      {renderDrop()}\n      <div className=\"preview-image\">\n        {validate.length > 0 && <div className=\"preview-header\">{validate}</div>}\n        {error && <div className=\"preview-header\">{error}</div>}\n        {\n          rejectFiles.length > 0 &&\n          <>\n            <div className=\"preview-header\">Files upload error</div>\n            <div className=\"errors\">\n              <RSC noScrollX={true} style={{ height: innerHeight - 350 }}>\n                {\n                  rejectFiles.map((item: FileRejection, idx: number) =>\n                    <div className=\"d-flex flex-wrap error-line\" key={idx}>\n                      <div className=\"col-7\">\n                        <span className=\"error\">{item.file.name}</span>\n                      </div>\n                      <div className=\"col-5\">\n                        {item.errors.map((error) => <span className=\"error\">{error.message}</span>)}\n                      </div>\n                    </div>\n                  )\n                }\n              </RSC>\n            </div>\n          </>\n        }\n        {\n          previewImages.length > 0 &&\n          <div className=\"box\">\n            <RSC noScrollX={true} style={{ height: innerHeight - 300 }}>\n              <ImageList items={previewImages} prefixUrl={CONFIG.IMAGE_URL} clsName=\"d-flex flex-wrap wrap-list\" />\n            </RSC>\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport CONFIG from \"../../configs/config\"\nimport { getList } from \"../../api/HandleRequest\"\nimport { UseSizeProp, Size } from \"./SizeInterface\";\n\nfunction useSizes() {\n  const [sizes, setSizes] = useState<Size[]>([])\n  const [error, setError] = useState('')\n  useEffect(() => {\n    let current = true;\n    async function fetchSizes() {\n      const res = await getList(CONFIG.API_SIZE.LIST)\n      if (res.isError) return setError(res.message)\n      if (current) setSizes(res.result.data)\n    }\n    fetchSizes()\n\n    return () => { current = false }\n  }, [])\n\n  return [sizes, setSizes, error];\n}\n\nexport default function SizeList({ onChange }: UseSizeProp) {\n  const [sizes, setSizes, error] = useSizes() as [Size[], React.Dispatch<React.SetStateAction<Size[]>>, string];\n\n  /**\n   * Handle click from prop\n   * @param event \n   * @param item \n   */\n  function handleClick(event: React.ChangeEvent<unknown>, item: Size) {\n    const sizeChecked = sizes.filter((i: Size) => {\n      i.id === item.id ? i.selected = true : i.selected = false;\n\n      return i;\n    })\n\n    setSizes(sizeChecked);\n\n    if (onChange) onChange(item, event)\n  }\n\n  return (\n    <div className=\"d-flex flex-wrap size\">\n      {error && <div>{error}</div>}\n      {sizes.map((item: Size, idx: number) => <span key={idx} onClick={(event) => handleClick(event, item)} className={`item ${item.selected === true ? 'active' : ''}`}>{item.title}</span>)}\n    </div>\n  )\n}","import 'react-quill/dist/quill.snow.css'\nimport '../Images/Index.scss'\nimport React, { useState, useEffect } from \"react\"\nimport ReactQuill from 'react-quill'\nimport Toolbar, { undoChange, redoChange } from \"./Toolbar\"\nimport CONFIG from \"../../configs/config\"\nimport { getList } from '../../api/HandleRequest'\nimport RSC from \"react-scrollbars-custom\"\nimport Loading from '../Loading/Loading'\nimport Pagination from '@material-ui/lab/Pagination'\nimport ImageList from '../Images/ImageList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThList, faCloudUploadAlt, faCropAlt } from '@fortawesome/free-solid-svg-icons'\nimport ImageCrop from '../Images/ImageCrop'\nimport Upload from '../Images/Upload'\nimport SizeList from '../Size/SizeList'\nimport { Size } from '../Size/SizeInterface'\nimport { useRef } from 'react'\n\ninterface Provider {\n  id: number;\n  thumbnail: string;\n  media_title: string;\n  views: number;\n  published_at: string;\n  description: string;\n  slug: string\n}\n\nfunction useImages(showPopup: boolean, activeTab: number) {\n  const [images, setImages] = useState<Provider[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [totalPage, setTotalPage] = useState(1)\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    async function getImages() {\n      setIsLoading(true);\n      const res = await getList(CONFIG.API_IMAGE.LIST, page)\n      setImages(res.result.data)\n      setTotalPage(res.result.meta.total_pages);\n      setIsLoading(false)\n    }\n\n    if (showPopup && activeTab === 1) {\n      getImages()\n    }\n  }, [page, showPopup, activeTab])\n\n  return [images, isLoading, totalPage, page, setPage];\n}\n\nexport default function Editor() {\n  const [innerHeight] = useState(window.innerHeight - 300)\n  const [valueEditor, setValueEditor] = useState('')\n  const [showPopup, setShowPopup] = useState(false)\n  const [activeTab, setActiveTab] = useState(1);\n  const [images, isLoading, totalPage, page, setPage] = useImages(showPopup, activeTab) as [Provider[], boolean, number, number, React.Dispatch<React.SetStateAction<number>>];\n  const [size, setSize] = useState<Size>({})\n  const inputElement = useRef(null);\n\n  const handleEditorChange = (content: any, delta: any, source: any, editor: any) => {\n    // IF we don't setState for editor, the value of editor will be lost after we click, change or have a new event make state change\n    setValueEditor(editor.getHTML())\n    // console.log(editor.getHTML()); // rich text\n    // console.log(editor.getText()); // plain text\n    // console.log(editor.getLength()); // number of characters\n  }\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\",\n      handlers: {\n        undo: undoChange,\n        redo: redoChange,\n        images: handleImageList\n      }\n    },\n    history: {\n      delay: 500,\n      maxStack: 100,\n      userOnly: true\n    }\n  };\n\n  async function handleImageList() {\n    setShowPopup(true);\n    // var range = inputElement.current.getEditor().getSelection();\n    // console.log(range.index)\n    // var value = prompt('What is the image URL');\n\n    if (inputElement && inputElement.current) {\n      const quill = inputElement.current as any;\n      const editor = quill.getEditor();\n      console.log(editor.getSelection())\n    }\n  }\n\n  function handleGetSelection() {\n    if (inputElement && inputElement.current) {\n      const quill = inputElement.current as any;\n      const editor = quill.getEditor();\n      console.log(editor.getSelection())\n    }\n  }\n  function handleSelectImg(item: any) {\n    console.log(item);\n\n    // ReactQuill.in(10, 'image', 'https://quilljs.com/images/cloud.png');\n    if (inputElement && inputElement.current) {\n      const quill = inputElement.current as any;\n      const editor = quill.getEditor();\n      console.log(editor.getSelection())\n      // editor.insertText(0, 'Hello', 'bold', true);\n\n      editor.insertEmbed(0, 'image', 'https://storage.googleapis.com/duy-bucket/uploads-test/xBahjUcf1zJ9CQEMLENIgLiCNP5neqnxaVTArZBw.jpeg')\n    }\n  }\n\n  function displayItem() {\n    if (isLoading) {\n      return <Loading totalItem={9} col={4} clsName=\"d-flex flex-wrap wrap-list\" />\n    }\n\n    return <ImageList items={images} onChange={handleSelectImg} prefixUrl={CONFIG.IMAGE_URL} clsName=\"d-flex flex-wrap wrap-list\" />\n  }\n\n  function handleActiveTab(key: number) {\n    if (key !== activeTab) {\n      setActiveTab(key)\n    }\n  }\n\n  function handleSize(item: Size) {\n    setSize({\n      width: item.width,\n      height: item.height\n    })\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Toolbar />\n      <ReactQuill\n        ref={inputElement}\n        theme=\"snow\"\n        value={valueEditor}\n        onChange={handleEditorChange}\n        placeholder={\"Write something awesome...\"}\n        modules={modules}\n      />\n      {\n        showPopup &&\n        <div className=\"image-manager\" style={{ top: 200 }}>\n          <div className=\"container\">\n            <div className=\"box\">\n              <header className=\"header\">\n                <button className={`btn btn-list ${activeTab === 1 ? 'active' : ''}`} onClick={() => handleActiveTab(1)}><FontAwesomeIcon icon={faThList} size=\"lg\" /></button>\n                <button className={`btn btn-upload ${activeTab === 2 ? 'active' : ''}`} onClick={() => handleActiveTab(2)}><FontAwesomeIcon icon={faCloudUploadAlt} /></button>\n                <button className={`btn btn-drop ${activeTab === 3 ? 'active' : ''}`} onClick={() => handleActiveTab(3)}><FontAwesomeIcon icon={faCropAlt} /></button>\n                <div className=\"arrow-action\">\n                  <button className=\"btn arrow arrow-close\" onClick={() => setShowPopup(false)} />\n                  <button className=\"btn arrow arrow-expand\" />\n                </div>\n              </header>\n              {activeTab === 1 && <RSC noScrollX={true} style={{ height: innerHeight }}> {displayItem()}</RSC>}\n              {activeTab === 2 && <div className=\"image-crop-box\" style={{ height: innerHeight }}> <Upload /></div>}\n              {\n                activeTab === 3 &&\n                <div className=\"image-crop-box\" style={{ height: innerHeight }}>\n                  <SizeList onChange={handleSize} />\n                  <ImageCrop size={size} />\n                </div>\n              }\n              <footer className=\"footer\">\n                {activeTab === 1 && <Pagination count={totalPage} page={page} boundaryCount={4} onChange={(_e, page) => setPage(page)} showFirstButton showLastButton />}\n              </footer>\n            </div>\n          </div>\n        </div>\n      }\n      <div style={{ position: \"fixed\", top: 200, right: 100 }}>\n        <button onClick={handleGetSelection}>SHOW IMAGE</button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\nimport CONFIG from './configs/config';\nimport New from './components/animes/New';\nimport Main from './components/layout/Main';\nimport { getList, getToken } from './api/HandleRequest';\nimport Form from './components/EditorCustom/Index';\nimport EditorCustom from './components/EditorCustom/EditorCustom';\nimport Editor from './components/Editor/Index';\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nfunction Home() {\n\n  async function getData() {\n    // await getList(CONFIG.API_IMAGE, 8, 0);\n    await getList(CONFIG.API_POST_TEST, 8, 0);\n\n  }\n\n  async function refreshToken() {\n    const res = await getToken(CONFIG.API_REFRESH_TOKEN);\n    if (!res.isError) {\n      localStorage.setItem(\"token\", JSON.stringify(res.result.token));\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Home page</h2>\n      <button className=\"btn-load-more\" onClick={getData}><p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Check Token</span></p></button>\n      <button className=\"btn-load-more\" onClick={refreshToken}><p><span className=\"bg\"></span><span className=\"base\"></span><span className=\"text\">Refresh Token</span></p></button>\n    </div>\n  );\n}\n\nfunction Character() {\n  return (\n    <div className=\"container\">\n      <h2>Nhân vật</h2>\n    </div>\n  );\n}\n\nexport default function AppRoute() {\n  return (\n    <Router>\n      <Main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/form-one\">\n            <Form />\n          </Route>\n          <Route exact path=\"/form-two\">\n            <EditorCustom />\n          </Route>\n          <Route exact path=\"/form-three\">\n            <Editor />\n          </Route>\n          <Route exact path=\"/tin-tuc-anime\">\n            <New />\n          </Route>\n          <Route exact path=\"/nhan-vat\">\n            <Character />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </Main>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppRoute from './Route';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRoute />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.688f92e3.svg\";"],"sourceRoot":""}